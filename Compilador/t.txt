LEMBRAR QUE IMPLEMENTEI MEIA BOCA AS ULTIMAS 3

O CODIGO TESTE NAO TEM EXPRESSOES MUITO ELABORADAS, MAS JA FOI UTILIZADO COMO TESTE FINAL
A GALERA COSTUMA ERRAR MTT EXPRESSOES ELABORADAS, ENTAO CUIDADO

pesquisar biblioteca qd (acho) de interface grafica no C

possivel fonte de erro: entrada da tabela de simbolos pode ter lixo! (nome_ident)

======================================================================================================================================================================================
RVISÕES LUCAS:

>   rever mensagens de erro (exemplo5: tem mais codigo após o ponto final)
    conferir _error(0) tbm (tem de varios tipos)

>   testar inverte sinal

>   verdadeiro ou falso


Incertezas:
>   Rever retorno de função em satribuição
>   Possivel Problema Sintatico (verificar obrigatoriedade de virgula final em analisa_comandos)
>   Confirmar se leia e escreva tem que ser inteiro (se for, adicionar verificação em declvar e declvar func)
>   rever como remover a necessidade de parametro, e como lidar com erros em decl_var_tabela
    msm coisa com decl_var e pesquisa_declvarfunc_tabela
>   confirmar se escreva tem que ser uma variavel, ou pode ser uma função / expressao - meche em pesquisa_declvarfunc_tabela

Perguntas para o Freitas:
>   Ao conferir duplicidade de procedimento ou função, precisa conferir se é um tipo? (ex.: declfunc conferir se é função ou só achar o nome)
>   Precisa colocar erros que em teoria nunca vão acontecer? (var nao declarada ao colocar tipo)
>   Pode chamar função solta? (se puder, afeta chamada_proc)
>   ponto e virgula no teste semant linha 33:
    > <comando condicional := se <expressao> entao <comando> [senao <comando>]
    > <comando> :=  (   <atribuição_chprocedimento>|
                        <comando condicional> |
                        <comando enquanto> |
                        <comando leitura> |
                        <comando escrita> |
                        <comandos>)
    > comandos := inicio <comando> {;<comando>} [;] fim
    > <atribuição_chprocedimento>::= (<comando atribuicao>|<chamada de procedimento>)
    > <chamada de procedimento>::= <identificador>
